@import '~kununu-theme/scss/base/variables';

.radioContainer {
  display: table;
  width: 100%;

  * {
    box-sizing: border-box;
  }

  @supports (display: flex) {
    display: flex;
    flex-flow: row wrap;
  }
}

.radioButton {
  text-align: center;
  display: table-cell;

  @supports (display: flex) {
    display: flex;
    flex: 1;
  }

  input {
    position: absolute;
    opacity: 0;
    z-index: -1;
  }

  input:checked + label {
    &,
    &:hover {
      background: $blue-light;
      color: $white;
    }
  }

  label {
    width: 100%;
    margin: 0;
    padding: 11px 15px;
    cursor: pointer;
    font-weight: normal;
    transition: all .25s;
    border: 1px solid $blue-light;
    border-left: 0;
    color: $blue-dark;

    @supports (display: flex) {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    &:hover {
      background: $gray-lightest;
    }

    &.disabled,
    &[disabled] {
      cursor: not-allowed;
      opacity: .65;
      border-color: $blue-light;

      &:hover {
        background: initial;
      }
    }
  }

  &:first-child {
    label {
      border-radius: $border-radius-base 0 0 $border-radius-base;
      border-left: 1px solid $blue-light;
    }
  }

  &:last-child {
    label {
      border-radius: 0 $border-radius-base $border-radius-base 0;
    }
  }
}

.radioContainer.flexible {
  @media (max-width: $screen-sm-max) {
    border: 1px solid $blue;
    border-radius: $border-radius-base;

    .radioButton {
      display: block;

      @supports (display: flex) {
        display: flex;
        flex: 50%;
      }

      label {
        border: 0;
        border-bottom: 1px solid $blue;
        border-radius: 0;

        @supports (display: flex) {
          border: 0;
        }
      }

      @supports (display: flex) {
        &:nth-child(4n+3) label,
        &:nth-child(4n+4) label {
          border: 1px solid $blue;
          border-radius: 0;
          border-left: 0;
          border-right: 0;
        }

        &:nth-child(odd) label {
          border-right: 1px solid $blue;
        }

        &:nth-last-child(2) label,
        &:nth-last-child(1) label {
          border-bottom: 0;
        }
      }
    }
  }
}

[data-options-per-row] {
  flex-wrap: wrap;

  .radioButton {
    label {
      border-top: 0;
    }

    // Reset default border-radius for first and last child
    &:first-child {

      label {
        border-radius: 0;
      }
    }

    &:last-child {

      label {
        border-radius: 0;
      }
    }
  }

  // Mobile Styling
  @media (max-width: $screen-sm-max) {
    .radioButton {
      flex: 0 0 50%;

      // First Row
      &:nth-child(-n+2) {
        label {
          border-top: 1px solid $blue;
        }
      }

      // All Left Radio Buttons
      &:nth-child(2n + 1) {
        label {
          border-left: 1px solid $blue;
        }
      }

      // Style for border corners
      // Top Left Corner
      &:first-child {
        label {
          border-top-left-radius: $border-radius-base;
        }
      }

      // Top Right Corner
      &:nth-child(2) {
        label {
          border-top-right-radius: $border-radius-base;
        }
      }

      // Bottom Left Corner
      &:nth-child(2n + 1):nth-last-child(-n + 2) {
        label {
          border-bottom-left-radius: $border-radius-base;
        }
      }

      // Bottom Right Corner
      &:last-child,
      &:nth-child(2n):nth-last-child(-n + 2) {
        label {
          border-bottom-right-radius: $border-radius-base;
        }
      }
    }
  }
}

@mixin options-per-row($count) {
  [data-options-per-row='#{$count}'] {
    @media (min-width: $screen-md-min) {
      .radioButton {
        flex: 0 0 100% / $count;

        label {
          border-top: 0;
        }
      }

      // Target first row
      .radioButton:nth-child(-n + #{$count}) {
        label {
          border-top: 1px solid $blue;
        }
      }

      // All left radioButtons
      .radioButton:nth-child(#{$count}n + 1) {
        label {
          border-left: 1px solid $blue;
        }
      }

      // Top Left Corner
      .radioButton:first-child {
        label {
          border-top-left-radius: $border-radius-base;
        }
      }

      // Top Right Corner
      .radioButton:nth-child(#{$count}) {
        label {
          border-top-right-radius: $border-radius-base;
        }
      }

      // Bottom Left Corner
      .radioButton:nth-child(#{$count}n+1):nth-last-child(-n+#{$count}) {
        label {
          border-bottom-left-radius: $border-radius-base;
        }
      }

      // Bottom Right Corner
      .radioButton:nth-child(#{$count}n):nth-last-child(-n + #{$count}),
      .radioButton:last-child {
        label {
          border-bottom-right-radius: $border-radius-base;
        }
      }
    }
  }
}

@include options-per-row(3);
@include options-per-row(4);
@include options-per-row(5);
@include options-per-row(6);
@include options-per-row(7);
