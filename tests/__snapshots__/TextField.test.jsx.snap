// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Badwords should highlight correctly 1`] = `
<TextField
  autoComplete="off"
  autoFocus={false}
  disable={false}
  displayLength={false}
  dynamicTextareaHeight={true}
  error={null}
  errorSubInfo={null}
  highlightList={
    Object {
      "bad": "bad",
      "words": "words",
    }
  }
  id="text-field"
  inputStyle="inline"
  isRequired={false}
  label={
    <span>
      <label
        htmlFor="text-field"
      >
        TextField
      </label>
      <ToolTip
        content="content"
        icon={
          <svg
            version="1.1"
            viewBox="0 0 75 75"
            x="0px"
            xmlSpace="preserve"
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
            y="0px"
          >
            <path
              d="M37.5,20.398c-1.648,0-3,1.352-3,3c0,1.649,1.352,3,3,3c1.648,0,3-1.351,3-3C40.5,21.75,39.148,20.398,37.5,20.398z M39.75,52.648V34.051c0-1.274-0.977-2.25-2.25-2.25c-1.273,0-2.25,0.976-2.25,2.25v18.602c0,1.273,0.977,2.25,2.25,2.25 C38.773,54.902,39.75,53.852,39.75,52.648z M37.5,3.75C18.824,3.75,3.75,18.824,3.75,37.5S18.824,71.25,37.5,71.25 S71.25,56.176,71.25,37.5S56.176,3.75,37.5,3.75z M37.5,8.25c16.125,0,29.25,13.125,29.25,29.25S53.625,66.75,37.5,66.75 S8.25,53.625,8.25,37.5S21.375,8.25,37.5,8.25"
            />
          </svg>
        }
        label="Test"
        position="topLeft"
      />
    </span>
  }
  labelHidden={false}
  maxLength={500}
  minHeight={null}
  multiLine={true}
  name="text-field"
  onBlur={[Function]}
  onChange={null}
  onFocus={[Function]}
  onHighlight={[Function]}
  pattern=""
  placeholder=""
  query={Object {}}
  reference={[Function]}
  requiredLabel=""
  rows={5}
  sanitizeValue={[Function]}
  title=""
  type="text"
  value=""
>
  <div
    className="formGroup inline"
    id="text-field-container"
  >
    <span
      className="labelContainer"
    >
      <label
        htmlFor="text-field"
      >
        TextField
      </label>
      <ToolTip
        content="content"
        icon={
          <svg
            version="1.1"
            viewBox="0 0 75 75"
            x="0px"
            xmlSpace="preserve"
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
            y="0px"
          >
            <path
              d="M37.5,20.398c-1.648,0-3,1.352-3,3c0,1.649,1.352,3,3,3c1.648,0,3-1.351,3-3C40.5,21.75,39.148,20.398,37.5,20.398z M39.75,52.648V34.051c0-1.274-0.977-2.25-2.25-2.25c-1.273,0-2.25,0.976-2.25,2.25v18.602c0,1.273,0.977,2.25,2.25,2.25 C38.773,54.902,39.75,53.852,39.75,52.648z M37.5,3.75C18.824,3.75,3.75,18.824,3.75,37.5S18.824,71.25,37.5,71.25 S71.25,56.176,71.25,37.5S56.176,3.75,37.5,3.75z M37.5,8.25c16.125,0,29.25,13.125,29.25,29.25S53.625,66.75,37.5,66.75 S8.25,53.625,8.25,37.5S21.375,8.25,37.5,8.25"
            />
          </svg>
        }
        label="Test"
        position="topLeft"
      >
        <div
          className="toolTip"
        >
          <button
            className="unstyledButton"
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            title="Test"
            type="button"
          >
            <svg
              version="1.1"
              viewBox="0 0 75 75"
              x="0px"
              xmlSpace="preserve"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
              y="0px"
            >
              <path
                d="M37.5,20.398c-1.648,0-3,1.352-3,3c0,1.649,1.352,3,3,3c1.648,0,3-1.351,3-3C40.5,21.75,39.148,20.398,37.5,20.398z M39.75,52.648V34.051c0-1.274-0.977-2.25-2.25-2.25c-1.273,0-2.25,0.976-2.25,2.25v18.602c0,1.273,0.977,2.25,2.25,2.25 C38.773,54.902,39.75,53.852,39.75,52.648z M37.5,3.75C18.824,3.75,3.75,18.824,3.75,37.5S18.824,71.25,37.5,71.25 S71.25,56.176,71.25,37.5S56.176,3.75,37.5,3.75z M37.5,8.25c16.125,0,29.25,13.125,29.25,29.25S53.625,66.75,37.5,66.75 S8.25,53.625,8.25,37.5S21.375,8.25,37.5,8.25"
              />
            </svg>
          </button>
        </div>
      </ToolTip>
    </span>
    <div
      className="inputContainer"
    >
      <div
        className="highlightOverlay formControl textarea dynamicHeight"
      >
        These
         
        are
         
        some
         
        <span
          className="highlighted"
          key="bad"
        >
          bad
        </span>
         
        <span
          className="highlighted"
          key="words"
        >
          words
        </span>
      </div>
      <textarea
        autoFocus={false}
        className="formControl textarea dynamicHeight"
        disabled={false}
        id="text-field"
        maxLength={500}
        name="text-field"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        pattern=""
        placeholder=""
        required={false}
        rows={5}
        style={Object {}}
        value="These are some bad words"
      />
    </div>
  </div>
</TextField>
`;

exports[`Changes output on value change manipulation 1`] = `
<TextField
  autoComplete="off"
  autoFocus={false}
  disable={false}
  displayLength={false}
  dynamicTextareaHeight={true}
  error={null}
  errorSubInfo={null}
  highlightList={null}
  id="text-field"
  inputStyle="inline"
  isRequired={true}
  label="TextField"
  labelHidden={false}
  maxLength={500}
  minHeight={null}
  multiLine={false}
  name="text-field"
  onBlur={[Function]}
  onChange={null}
  onFocus={[Function]}
  onHighlight={[Function]}
  pattern=""
  placeholder=""
  query={Object {}}
  reference={[Function]}
  requiredLabel="required"
  rows={5}
  sanitizeValue={[Function]}
  title=""
  type="text"
  value="test"
>
  <div
    className="formGroup inline paddingTop"
    id="text-field-container"
  >
    <label
      className="controlLabel flexLabel"
      htmlFor="text-field"
    >
      <span>
        TextField
      </span>
      <InfoLabel
        displayLength={false}
        inputValue="test"
        maxLength={500}
        requiredLabel="required"
      >
        <span
          className="controlNote label"
        >
          required
        </span>
      </InfoLabel>
    </label>
    <div
      className="inputContainer"
    >
      <input
        autoComplete="off"
        autoFocus={false}
        className="formControl"
        disabled={false}
        id="text-field"
        maxLength={500}
        name="text-field"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        pattern=""
        placeholder=""
        required={true}
        title=""
        type="text"
        value="UGH"
      />
    </div>
  </div>
</TextField>
`;

exports[`Renders A TextField with visible character counter without crashing 1`] = `
<div
  className="formGroup inline paddingTop"
  id="text-field-container"
>
  <label
    className="controlLabel flexLabel"
    htmlFor="text-field"
  >
    <span>
      TextField
    </span>
    <span
      className="controlNote label"
    >
      <strong>
        5
      </strong>
      /
      500
    </span>
  </label>
  <div
    className="inputContainer"
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="formControl"
      disabled={false}
      id="text-field"
      maxLength={500}
      name="text-field"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      pattern=""
      placeholder=""
      required={true}
      title=""
      type="text"
      value="test2"
    />
  </div>
</div>
`;

exports[`Renders TextField with an error message without crashing 1`] = `
<div
  className="formGroup inline paddingTop"
  id="text-field-container"
>
  <label
    className="controlLabel controlLabelError flexLabel"
    htmlFor="text-field"
  >
    <span>
      TextField
    </span>
    <span
      className="controlNote label"
    >
      required
    </span>
  </label>
  <div
    className="inputContainer"
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="formControl formControlError"
      disabled={false}
      id="text-field"
      maxLength={500}
      name="text-field"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      pattern=""
      placeholder=""
      required={true}
      title=""
      type="text"
      value="test"
    />
    <span
      className="error"
    >
      <strong
        className="info"
      >
        An Error
      </strong>
      with useful hints
    </span>
  </div>
</div>
`;

exports[`Renders TextField with multiline without crashing 1`] = `
<div
  className="formGroup inline paddingTop"
  id="text-field-container"
>
  <label
    className="controlLabel flexLabel"
    htmlFor="text-field"
  >
    <span>
      TextField
    </span>
    <span
      className="controlNote label"
    >
      required
    </span>
  </label>
  <div
    className="inputContainer"
  >
    <textarea
      autoFocus={false}
      className="formControl textarea"
      disabled={false}
      id="text-field"
      maxLength={500}
      name="text-field"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      pattern=""
      placeholder=""
      required={true}
      rows={5}
      style={Object {}}
      value="test2"
    />
  </div>
</div>
`;

exports[`Renders TextField without crashing 1`] = `
<div
  className="formGroup inline paddingTop"
  id="text-field-container"
>
  <label
    className="controlLabel flexLabel"
    htmlFor="text-field"
  >
    <span>
      TextField
    </span>
    <span
      className="controlNote label"
    >
      required
    </span>
  </label>
  <div
    className="inputContainer"
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="formControl"
      disabled={false}
      id="text-field"
      maxLength={500}
      name="text-field"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      pattern=""
      placeholder=""
      required={true}
      title=""
      type="text"
      value="test"
    />
  </div>
</div>
`;

exports[`Renders a TextField with a ToolTip without crashing 1`] = `
<div
  className="formGroup inline"
  id="text-field-container"
>
  <span
    className="labelContainer"
  >
    <label
      htmlFor="text-field"
    >
      TextField
    </label>
    <div
      className="toolTip"
    >
      <button
        className="unstyledButton"
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        title="Test"
        type="button"
      >
        <svg
          version="1.1"
          viewBox="0 0 75 75"
          x="0px"
          xmlSpace="preserve"
          xmlns="http://www.w3.org/2000/svg"
          xmlnsXlink="http://www.w3.org/1999/xlink"
          y="0px"
        >
          <path
            d="M37.5,20.398c-1.648,0-3,1.352-3,3c0,1.649,1.352,3,3,3c1.648,0,3-1.351,3-3C40.5,21.75,39.148,20.398,37.5,20.398z M39.75,52.648V34.051c0-1.274-0.977-2.25-2.25-2.25c-1.273,0-2.25,0.976-2.25,2.25v18.602c0,1.273,0.977,2.25,2.25,2.25 C38.773,54.902,39.75,53.852,39.75,52.648z M37.5,3.75C18.824,3.75,3.75,18.824,3.75,37.5S18.824,71.25,37.5,71.25 S71.25,56.176,71.25,37.5S56.176,3.75,37.5,3.75z M37.5,8.25c16.125,0,29.25,13.125,29.25,29.25S53.625,66.75,37.5,66.75 S8.25,53.625,8.25,37.5S21.375,8.25,37.5,8.25"
          />
        </svg>
      </button>
    </div>
  </span>
  <div
    className="inputContainer"
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="formControl"
      disabled={false}
      id="text-field"
      maxLength={500}
      name="text-field"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      pattern=""
      placeholder=""
      required={false}
      title=""
      type="text"
      value=""
    />
  </div>
</div>
`;

exports[`Renders a medium size Textfield with multiline without crashing 1`] = `
<div
  className="formGroup mediumSize"
  id="text-field-container"
>
  <label
    className="controlLabel controlLabelMediumSize flexLabel"
    htmlFor="text-field"
  >
    <span>
      TextField
    </span>
  </label>
  <div
    className="inputContainer"
  >
    <textarea
      autoFocus={false}
      className="formControl textarea"
      disabled={false}
      id="text-field"
      maxLength={500}
      name="text-field"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      pattern=""
      placeholder=""
      required={false}
      rows={5}
      style={Object {}}
      value=""
    />
  </div>
</div>
`;
